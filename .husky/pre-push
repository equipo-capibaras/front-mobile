#!/bin/bash

if [ ! -x ./gradlew ]; then
  echo "❌ gradlew not found. Ensure you're in the correct directory."
  exit 1
fi

# Lint
./gradlew lint --continue
lint_status=$?

if [ "$lint_status" -ne 0 ]; then
  echo "❌ Linting failed."
  exit 1
else
  echo "✅ Linting passed successfully."
fi

# Unit tests
./gradlew testDebug --continue
instrumented_test_status=$?

if [ "$test_status" -ne 0 ]; then
  echo "❌ Unit tests failed."
  exit 1
else
  echo "✅ Unit tests passed successfully."
fi

# Instrumented  tests
./gradlew connectedAndroidTest --continue
test_status=$?

if [ "instrumented_test_status" -ne 0 ]; then
  echo "❌ Instrumented tests failed."
  exit 1
else
  echo "✅ Instrumented tests passed successfully."
fi


# Coverage
./gradlew codeCoverageReportDebug
coverage_status=$?

if [ "$coverage_status" -ne 0 ]; then
  echo "❌ Coverage report generation failed."
  exit 1
fi

coverage_threshold=80
coverage_file="./app/build/reports/jacoco/codeCoverageReportDebug/html/index.html"

if [ -f "$coverage_file" ]; then
  echo "Coverage report found: $coverage_file"

  coverage_percentage=$(grep -A 1 '<tfoot>' "$coverage_file" | grep -oE '<td class="ctr2">[^%]+' | sed -E 's/.*<td class="ctr2">([^%]+).*/\1/' | head -n 1)

  if [ -z "$coverage_percentage" ]; then
    echo "❌ Error: Coverage percentage value is empty or not found."
    exit 1
  fi

  if (( $(echo "$coverage_percentage < $coverage_threshold" | bc -l) )); then
    echo "❌ Insufficient test coverage: $coverage_percentage% (minimum $coverage_threshold%)"
    exit 1
  else
    echo "✅ Test coverage passed with $coverage_percentage%"
    exit 0
  fi
else
  echo "❌ Test coverage report not found."
  exit 1
fi
